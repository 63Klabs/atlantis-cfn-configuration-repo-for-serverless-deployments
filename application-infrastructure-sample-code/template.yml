# This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
# either express or implied. See the License for the specific language governing permissions 
# and limitations under the License.
#
# Web Service CloudFormation Application Infrastructure Template
# https://github.com/chadkluck/serverless-webservice-template-for-pipeline-atlantis
# Chad Leigh Kluck
# v2.2023-07-22 HPAD (Happy Pi Approximation Day!)
# 
# NOTE: As of v2 this template no longer supports CodeStar. I just wasn't using it and including
# it complicated the set-up and learning process. Parameters have also been refactored and the
# resources and parameters used by the npm package Cache-Data have been called out.
#
# USAGE/MORE INFO: https://github.com/chadkluck/serverless-webservice-template-for-pipeline-atlantis/blob/main/README.md

AWSTemplateFormatVersion: "2010-09-09"
Transform:  AWS::Serverless-2016-10-31
Description: "CloudFormation Application Infrastructure Template"

# =============================================================================
# META DATA
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-interface.html
# 

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - 
        Label:
          default: "Application Resource Naming"
        Parameters:
          - Prefix
          - ProjectId
          - StageId
          - S3BucketNameOrgPrefix
      -
        Label:
          default: "Deployment Environment Identification"
        Parameters:
          - DeployEnvironment
      -
        Label:
          default: "External Resources and Alarm Notifications"
        Parameters:
          - ParameterStoreHierarchy
          - AlarmNotificationEmail
      -
        Label:
          default: "Lambda Function Settings"
        Parameters:
          - FunctionTimeOutInSeconds
          - FunctionMaxMemoryInMB
          - FunctionGradualDeploymentType
          - DeployRole
      -
        Label:
          default: "Application Parameters"
        Parameters:
          - ApiPathBase
          - LogRetentionInDaysForPROD
          - LogRetentionInDaysForDEVTEST

# =============================================================================
# PARAMETERS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#

Parameters:

  # ---------------------------------------------------------------------------
  # Application Resource Naming

  Prefix:
    Type: String
    Description: "Prefix to assign to resources. This can be thought of as a Name Space and will be pre-pended to all resources. Use it to identify ownership/access for teams, departments, etc. Must have a corresponding CloudFormation Service Role. Ex: 'ws-hello-world-test' the Prefix would be 'ws', ProjectId would be 'hello-world', and the StageId would be 'test'."
    Default: "atlantis" 
    AllowedPattern: "^[a-z][a-z0-9-]*[a-z0-9]$"
    MinLength: 2
    MaxLength: 8
    ConstraintDescription: "2 to 8 characters. Alphanumeric (lower case) and dashes. Must start with a letter and end with a letter or number."
  ProjectId:
    Type: String
    Description: "Do NOT include <Prefix> or <StageId>. This is the Project ID for the application. (Minimum 2 characters, suggested maximum of 20) Ex: 'ws-hello-world-test' the Prefix would be 'ws', ProjectId would be 'hello-world', and the StageId would be 'test'. If you get 'S3 bucket name too long' errors then you must shorten the Project ID or use an S3 Org Prefix. Long Project IDs may also be truncated when naming resources."
    AllowedPattern: "^[a-z][a-z0-9-]*[a-z0-9]$"
    MinLength: 2
    ConstraintDescription: "Minimum of 2 characters (suggested maximum of 20). Alphanumeric (lower case) and dashes. Must start with a letter and end with a letter or number."
  StageId:
    Type: String
    Description: "Do NOT include <Prefix> or <ProjectId>. <StageId> does not need to match <DeployEnvironment>. You can have multiple stages in the TEST environment (e.g. test, john-test), and multiple stages in PROD (e.g. stage, beta, prod). Ex: 'ws-hello-world-test' the Prefix would be 'ws', ProjectId would be 'hello-world', and the StageId would be 'test'."
    AllowedPattern: "^[a-z][a-z0-9-]*[a-z0-9]$"
    MinLength: 2
    MaxLength: 10
    ConstraintDescription: "2 to 10 characters. Alphanumeric (lower case) and dashes. Must start with a letter and end with a letter or number."
  S3BucketNameOrgPrefix:
    Type: String
    Description: "By default, to enforce uniqueness, buckets created for deploy and infrastructure include account and region in the bucket name. However, due to S3 bucket name character limits, you can turn this off by specifying your own prefix (like an org code) that will be included before the project <Prefix> above."
    Default: ""
    AllowedPattern: "^[a-z0-9][a-z0-9-]*[a-z0-9]$|^$"
    ConstraintDescription: "May be empty or at least 2 characters long. Must start with a alphanumeric character, may contain lowercase letters, numbers, and hyphens."

  # ---------------------------------------------------------------------------
  # Deployment Environment Identification

  DeployEnvironment:
    Type: String
    Description: "What deploy/testing environment will this run under? An environment can contain multiple stages and in coordination with run different tests. Utilize this environment variable to determine your tests and app logging levels during deploy. This can be used for conditionals in the template. For example, PROD will use gradual deployment while DEV and TEST is AllAtOnce. Other resources, such as dashboards are created in PROD and not DEV or TEST. Suggested use: DEV for local SAM deployment, TEST for cloud deployment, PROD for stage, beta, and main/prod deployment."
    Default: "PROD"
    AllowedValues: ["DEV", "TEST", "PROD"]
    ConstraintDescription: "Must specify DEV, TEST, or PROD."

  # ---------------------------------------------------------------------------
  # External Resources and Alarm Notifications

  ParameterStoreHierarchy:
    Type: String
    Description: "Parameters may be organized within a hierarcy based on your organizational or operations structure. The application will create its parameters within this hierarchy. For example, /Finance/ops/<env>/<prefix>-<project_id>-<stage>/. Must either be a single '/' or begin and end with a '/'."
    Default: "/"
    AllowedPattern: "^\\/([a-zA-Z0-9_.-]*[\\/])+$|^\\/$"
    ConstraintDescription: "Must only contain alpha-numeric, dashes, underscores, or slashes. Must be a single slash or begin and end with a slash."
  AlarmNotificationEmail:
    Type: String
    Description: "Email address to send a notification to when Lambda function goes into alarm. Be sure to check the inbox for this email address as you will need to confirm the subscription."
    AllowedPattern: '^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$'
    ConstraintDescription: "A valid email must be used to receive alarm notifications"

  # ---------------------------------------------------------------------------
  # Lambda Function Settings

  FunctionTimeOutInSeconds:
    Type: Number
    Description: "Time out in seconds for the Lambda function. API Gateway times out after 30 seconds. This web service is ideal for requests that can complete in less than 10 seconds"
    Default: 10
    MinValue: 3
    MaxValue: 30
  FunctionMaxMemoryInMB:
    Type: Number
    Description: "If you are handling large responses, you will need to increase the size. Monitor CloudWatch logs"
    Default: 128
    AllowedValues: [128, 192, 256, 320, 384, 448, 512]
    ConstraintDescription: "Min 128, Max 512 in increments of 64"
  FunctionGradualDeploymentType:
    Type: String
    Description: "For production environments, what method do you want to use to gradually deploy before rolling back in case of errors. Note that when 'DeployEnvironment' is TEST or DEV, gradual deploy will not be enabled and will be same as All At Once"
    Default: "Linear10PercentEvery3Minutes"
    AllowedValues:
      - "Canary10Percent5Minutes" # Canary = First 10%, then after x minutes, full 90% (full deploy after x minutes)
      - "Canary10Percent10Minutes"
      - "Canary10Percent15Minutes"
      - "Canary10Percent30Minutes"
      - "Linear10PercentEvery1Minute" # Linear = Total of 10 deploys every x minutes: 10%, wait x minutes, another 10%, wait, 10%.... (full deploy after 10 * x minutes)
      - "Linear10PercentEvery2Minutes"
      - "Linear10PercentEvery3Minutes"
      - "Linear10PercentEvery10Minutes"
      - "AllAtOnce" # All at once. Recommended only for TEST and DEV environments.
  DeployRole:
    Type: String
    Description: "IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions"


  # ---------------------------------------------------------------------------
  # Application Settings

  ApiPathBase:
    Type: String
    Description: "The path API Gateway uses as the first segment in the invoked Uniform Resource Identifier (URI). Since API Gateway generates random characters for the domain, it can be helpful to use this in identifying applications and stages. If a custom domain is used it can be masked and hidden from visitors. For example: xyz08ryz.apigateway.aws.com/pets or xyz08ryz.apigateway.aws.com/myapp or xyz08ryz.apigateway.aws.com/myapp-test. It is recommended you set this in the template-config.json file and allow the stage to be dynamically appended."
    Default: "api"
    AllowedPattern: ^[a-z0-9]([a-z0-9-_]*[a-z0-9])?$
    MaxLength: 128
    MinLength: 1
    ConstraintDescription: "1-128 lowercase alpha numeric, hyphens, and underscores. Must begin and end with an alphanumeric character."
  LogRetentionInDaysForPROD:
    Type: Number
    Description: "How long should CloudWatch logs be kept in a PRODUCTION environment?"
    Default: 90
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  LogRetentionInDaysForDEVTEST:
    Type: Number
    Description: "How long should CloudWatch logs be kept in a DEV or TEST environment?"
    Default: 7
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]


# =============================================================================
# CONDITIONS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-conditions.html
#

Conditions:
  IsProduction: !Equals [!Ref DeployEnvironment, "PROD"]
  IsNotProduction: !Not [!Equals [!Ref DeployEnvironment, "PROD"]]
  IsTest: !Equals [!Ref DeployEnvironment, "TEST"]
  IsDevelopment: !Equals [!Ref DeployEnvironment, "DEV"]
  CreateProdResources: !Equals [!Ref DeployEnvironment, "PROD"]
  CreateTestResources: !Equals [!Ref DeployEnvironment, "TEST"]
  CreateDevResources: !Equals [!Ref DeployEnvironment, "DEV"]
  UseS3BucketNameOrgPrefix: !Not [!Equals [!Ref S3BucketNameOrgPrefix, ""]]
  CreateAlarms: !Equals [!Ref DeployEnvironment, "PROD"] # Not yet implemented. Still in development / !Equals ["ALWAYS", "ALWAYS"] # Option if you want to ALWAYS create an alarm or only in PROD. Alarms cost money so you may only want them in Prod (or temporarily in test)

# =============================================================================
# GLOBALS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
#

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: !If [ IsProduction, True,  False] #Gradual deployment only if in production so DEV and TEST aren't hindered
      Type: !If [ IsProduction, !Ref FunctionGradualDeploymentType, "AllAtOnce"]
      Role: !Ref DeployRole

  Api:
    OpenApiVersion: 3.0.0 # Prevents extra stage called Stage in API Gateway https://www.internetkatta.com/how-to-prevent-aws-sam-from-creating-the-default-stage-in-api-gateway-stage

# =============================================================================
# RESOURCES
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html  
#

Resources:

  # ---------------------------------------------------------------------------
  # API Gateway, Lambda, and Monitoring

  # -- API Gateway --
  WebApi:
    Type: AWS::Serverless::Api
    Properties: 
      Name: !Sub '${Prefix}-${ProjectId}-${StageId}-WebApi'
      StageName: !Ref ApiPathBase
      # DefinitionBody:
      #   "Fn::Transform":
      #     Name: "AWS::Include"
      #     Parameters:
      #       Location: ./template-swagger.yml

  # -- Lambda Function --
  AppFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Prefix}-${ProjectId}-${StageId}-AppFunction'
      Description: "Magic Ball"
      CodeUri: app/
      Handler: index.handler
      Runtime: nodejs16.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: !Ref FunctionTimeOutInSeconds
      MemorySize: !Ref FunctionMaxMemoryInMB
      Environment:
        Variables:
          detailedLogs: !If [ IsProduction, "0",  "2"]
          deployEnvironment: !Ref DeployEnvironment
          paramStore: !Ref ParameterStoreHierarchy
          user_agent_identifier: !Ref UserAgent
          lambdaTimeoutInSeconds: !Ref FunctionTimeOutInSeconds # so we can calculate any external connection timeout in our code

      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref WebApi

  # -- LambdaFunction Execution Role --
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Prefix}-${ProjectId}-${StageId}-ExecutionRole"
      Description: "IAM Role that allows the Lambda permission to execute and access resources"
      Path: /
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole

      # These are the resources your Lambda function needs access to Logs, SSM Parameters, DynamoDb, S3, etc.
      # Define specific actions such as get/put (read/write). Work towards practicing the Principle of Least Privilege
      Policies:
      - PolicyName: LambdaResourceAccessPolicies
        PolicyDocument:
          Statement:

          - Sid: LambdaAccessToWriteLogs
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: !GetAtt AppLogGroup.Arn

  # -- Permissions allowing API Gateway to Execute Lambda via Web Console Test button --
  # See https://github.com/awslabs/serverless-application-model/issues/59#issuecomment-348709355
  ConfigLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AppFunction #!Sub "${AppFunction}:live"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebApi}/*"

  # ---------------------------------------------------------------------------
  # Resources for Lambda Function

  # -- Log Group with a retention policy --
  AppLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
        LogGroupName: !Sub '/aws/lambda/${Prefix}-${ProjectId}-${StageId}-AppFunction' # Avoid circular reference !Sub "/aws/lambda/${AppFunction}"
        RetentionInDays: !If [ IsProduction, !Ref LogRetentionInDaysForPROD,  !Ref LogRetentionInDaysForDEVTEST]

# =============================================================================
# OUTPUTS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
#
# Place anything interesting that you would like to quickly refer to in 
# your cloudformation OUTPUT section. Test URLs, direct links to resources, etc
#

Outputs:
  UserAPI:
    Description: "Endpoint Test URL"
    Value: !Sub "https://${WebApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiPathBase}/"
  CloudWatchLogGroup:
    Description: "Cloud Watch Log Group for application"
    Value: !Sub "https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=%2Faws%2Flambda%2F${AppFunction}"
  LambdaWebConsole:
    Description: "Lambda Web Console"
    Value: !Sub "https://console.aws.amazon.com/lambda/home?region=${AWS::Region}#/functions/${AppFunction}?tab=code"
