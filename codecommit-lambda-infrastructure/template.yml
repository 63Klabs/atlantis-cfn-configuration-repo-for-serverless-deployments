AWSTemplateFormatVersion: 2010-09-09
# Comments with 3#'s () are reserved for true CodeStar projects. Remove the 3#'s for true CodeStar projects

Transform:
- AWS::Serverless-2016-10-31
###- AWS::CodeStar # Uncomment for CodeStar projects - Leave commented for ProjectStack
Description: "SAM + CodeStar/ProjectStack example of a Lambda function and API which grants magical predictions"

# Parameters
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html

Parameters:

  # ProjectStack Environment Parameters
  ProjectId:
    Description: "The Project ID for the application. For CodeStar this will be the same as ProjectStageId. (Minimum 2 characters, and, if it is a CodeStar project, max of 15 characters). The Stage parameter will be appended to the ProjectID and must be taken into account as the max length of ProjectID is 15 characters."
    Type: String
    AllowedPattern: "^[a-z][a-z0-9-]+$"
    MinLength: 2
  ProjectStageId:
    Description: "The Project ID for the application with the stage appeneded (if there is a stage). If it is a CodeStar project, max of 15 characters and it will be the same as ProjectID."
    Type: String
    AllowedPattern: "^[a-z][a-z0-9-]+$"
    MinLength: 2
    ConstraintDescription: "Must contain only lowercase alphanumeric characters, dash, or underscore, and be between 2 and 15 characters in length."
  Prefix:
    Description: Prefix to assign to resources
    Type: String
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]"
    MinLength: 3
    MaxLength: 15
    ConstraintDescription: 3 to 15 characters. Alphanumeric (upper and lower), hyphen, and underscore. Must start with a letter and must end with a letter or number.
    Default: "awscodestar"
  DeployStage:
    Description: "This project represents what stage in the CI/CD pipeline? (test, beta, stage, prod). This should be equal to the deployment stage appended to the Project ID. The project ID plus the stage value must not exceed 15 characters."
    Type: String
    AllowedPattern: "[a-z0-9]*"
    MaxLength: 12
    ConstraintDescription: "Must contain only lowercase alphanumeric characters and be no more than 12 characters in length."
    Default: "" 
  DeployEnvironment:
    Description: "What deploy/testing environment will this run under? An environment can contain mulitple stages and in coordination with run different tests. Utilize this environment variable to determine your tests and app logging levels during deploy"
    Type: String
    AllowedValues: [DEV, TEST, PROD]
    ConstraintDescription: Must specify DEV, TEST, or PROD.
    Default: "DEV" 
  DeployRole:
    Type: String
    Description: "IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions"
  ParameterStoreAppPath:
    Description: "Parameter store path to organize parameters for this application. The value is in the format of: /<ParameterStoreBasePath>/<ProjectStageId>/"
    Type: String
    AllowedPattern: "^\\/([a-zA-Z0-9]+([\\-][a-zA-Z0-9]+)*[\\/])+$|^\\/$"
    ConstraintDescription: Must only contain alpha-numeric, dashes, or slashes. Must begin and end with a slash /.
    Default: "/"

  # Application Parameters
  ApiPathBase:
    Type: String
    Default: "api"
    Description: "The name of the API base path, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI). API Gateway refers to this as StageName and uses 'Prod' as default, but it is unrelated to the DeployStage parameter. For example: apigatewaydomain.com/Prod or apigatewaydomain.com/api or apigatewaydomain.com/myapp. A custom domain setting can mask the base path. However, if using the API Gateway generic URL, it could be used to provide an indicator of what app lies at the endpoint or even what depoly stage (e.g. 'cache-api' or 'cache-api-test')"
    AllowedPattern: ^[a-z]([a-z0-9-_])+$
    MaxLength: 128
    MinLength: 1
    ConstraintDescription: "1-128 lowercase alpha numeric, hyphens, and underscores"
  MyVar:
    Type: String
    Description: Just an example of a parameter variable you can pass in
    Default: '42'

  # Application Settings
  FunctionTimeOutInSeconds:
    Type: Number
    Default: 10
    Description: "Time out in seconds for the Lambda function. API Gateway times out after 30 seconds. This web service is ideal for requests that can complete in less than 10 seconds"
    MinValue: 3
    MaxValue: 30
  FunctionMaxMemoryInMB:
    Type: Number
    Default: 128
    Description: "If you are handling large responses, you will need to increase the size. Monitor CloudWatch logs"
    AllowedValues:
      - 128
      - 192
      - 256
      - 320
      - 384
      - 448
      - 512
    ConstraintDescription: "Min 128, Max 512 in increments of 64"
  FunctionGradualDeploymentType:
    Type: String
    Default: "Linear10PercentEvery10Minutes"
    Description: "For production environments, what method do you want to use to gradually deploy before rolling back in case of errors. Note that when 'DeployEnvironment' is TEST or DEV, gradual deploy will not be enabled and will be same as All At Once"
    AllowedValues:
      - "Canary10Percent30Minutes"
      - "Canary10Percent5Minutes"
      - "Canary10Percent10Minutes"
      - "Canary10Percent15Minutes"
      - "Linear10PercentEvery10Minutes"
      - "Linear10PercentEvery1Minute"
      - "Linear10PercentEvery2Minutes"
      - "Linear10PercentEvery3Minutes"
      - "AllAtOnce"

# Conditions
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-conditions.html
Conditions:
  IsCodeStar: !Equals [!Ref Prefix, "awscodestar"]
  IsProduction: !Equals [!Ref DeployEnvironment, "PROD"]
  IsTest: !Equals [!Ref DeployEnvironment, "TEST"]
  IsDevelopment: !Equals [!Ref DeployEnvironment, "DEV"]
  CreateProdResources: !Equals [!Ref DeployEnvironment, "PROD"]
  CreateTestResources: !Equals [!Ref DeployEnvironment, "TEST"]
  CreateDevResources: !Equals [!Ref DeployEnvironment, "DEV"]

# Globals
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
Globals:
  Function:
    Timeout: !Ref FunctionTimeOutInSeconds
    MemorySize: !Ref FunctionMaxMemoryInMB
    Runtime: nodejs12.x
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: !If [ IsProduction, True,  False] #Gradual deployment only if in production so DEV and TEST aren't hindered
      Type: !If [ IsProduction, !Ref FunctionGradualDeploymentType, "AllAtOnce"]
      Role: !Ref DeployRole
      Alarms:
        # You can add additional alarms, one is created for you
        #- !If [IsProduction, !Ref AppFunctionErrorsAlarm, !Ref AWS::NoValue]  # how do we do a novalue for a list?
        - !Ref AppFunctionErrorsAlarm

# Resources
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html

Resources:

  # API Gateway
  WebApi:
    Type: AWS::Serverless::Api
    Properties: 
      Name: !Sub '${Prefix}-${ProjectStageId}-WebApi'
      StageName: !If [ IsCodeStar, "Prod", !Ref ApiPathBase] # First part of the path in the URI "https://${WebApi}.execute-api.${AWS::Region}.amazonaws.com/app/" CodeStar dashboard uses Prod. However, if you don't care, you can use your regular setting
#      StageName: !Ref ProjectStageID # alternate - will need to update API section of Output to remove reference to ApiPathBase. You may also remove the Parameter definition

  # Lambda Function
  AppFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Prefix}-${ProjectStageId}-AppFunction'
      CodeUri: app/
      Handler: index.get
      Environment:
          Variables:
            MyVar: !Ref MyVar
            paramStorePath: !Ref ParameterStoreAppPath
            detailedLogs: !If [ IsProduction, "0",  "1"]
            deployEnvironment: !Ref DeployEnvironment
#            DynamoDb_table: !Ref AppDataDynamoDb # if you use the dynamodb resource below
#            S3_bucket: !Ref AppDataBucket # if you use the s3 resource below
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref WebApi
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn

  # LambdaFunction Execution Role
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - '-'
        - - !If [ IsCodeStar, 'CodeStar', !Ref Prefix ]
          - !Ref ProjectStageId
          - "ExecutionRole"
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      # Attach policies as needed. The project deploy/codestar template should already restrict access to those resources in the same project
      # DynamoDBReadPolicy for read-only 
      # DynamoDBWritePolicy for creates and updates 
      # DyamoDBStreamReadPolicy to attach to streams 
      # Avoid DynamoDBCrudPolicy whenever possible 
      # S3ReadPolicy for retrieving data 
      # S3WritePolicy for storing data 
      # Avoid using S3CrudPolicy and S3FullAccessPolicy whenever possible 
#      Policies:
#        - DynamoDBWritePolicy:
#            TableName: !Ref AppDataDynamoDb
#        - S3WritePolicy:
#            BucketName: !Ref AppDataBucket
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMReadOnlyAccess'
# These can probably be gotten rid of with the Policies
#        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonDynamoDBFullAccess'
#        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess'


  # Lambda Function Error Reports
  AppFunctionErrorsAlarm:
    Type: "AWS::CloudWatch::Alarm"
#    Condition: IsProduction
    Properties:
      AlarmDescription: Lambda Function Error > 0
      MetricName: Errors
      Statistic: Sum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      Period: 60
      EvaluationPeriods: 2
      TreatMissingData: notBreaching
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref AppFunction


# DynamoDb Code Sample
# =========================================================================== #
# To add a DynamoDb to your application, uncomment the following definition 
# and customize it to suit your needs. The below definition is what I
# commonly use. It has a Hash for a key, and a TTL specification which is
# disabled by default. (If enabled, you can provide your own expiration date 
# when you write/update the record, it is not based on any creation or
# modification. It is up to your Lambda app to set)
#
# If you use this, be sure to uncomment the related Policy under the 
# LambdaExecutionRole ManagedPolicyArns
# =========================================================================== #

# # DynamoDb
# AppDataDynamoDb:
#   Type: AWS::DynamoDB::Table
#   Properties:
#     TableName: !Sub '${Prefix}-${ProjectStageId}-AppDataDynamoDb'
#     AttributeDefinitions: 
#       - AttributeName: "id_hash"
#         AttributeType: "S"
#     KeySchema: 
#       - AttributeName: "id_hash"
#         KeyType: "HASH"
#     ProvisionedThroughput: 
#       ReadCapacityUnits: "5"
#       WriteCapacityUnits: "5"
#     TimeToLiveSpecification:
#       AttributeName: "purge_ts"
#       Enabled: false # TODO: set to true if you want to enable TTL
#     SSESpecification:
#       SSEEnabled: true


# S3 Bucket Code Sample
# =========================================================================== #
# To add an S3 bucket to your application, uncomment the following definition 
# and customize it to suit your needs. The below definition is what I
# commonly use and by default blocks all public access. It has an example 
# of a lifecycle policy that will expire objects after 30 days if the obj key 
# prefix matches "cache" (s3://yourbucket/cache/*)
# The lifecycle policy is currently disabled. To use it Enable it.
#
# If you use this, be sure to uncomment the related Policy under the 
# LambdaExecutionRole ManagedPolicyArns
# =========================================================================== #

  # # S3 Bucket 
  # AppDataBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Join # because this is not a public bucket, we'll give it a uniquely, specific name with region and acct
  #       - '-'
  #       - - !If [ IsCodeStar, 'aws-codestar', !Ref Prefix ] # S3 buckets for CodeStar for some reason use a dash (aws-codestar) so we can't just use the awscodestar prefix for CodeStar
  #         - !Ref AWS::Region
  #         - !Ref AWS::AccountId
  #         - !Ref ProjectStageId
  #         - 'appdatabucket' # Whatever you want to use to identify this bucket in your application
  #     PublicAccessBlockConfiguration:
  #       BlockPublicAcls: true
  #       BlockPublicPolicy: true
  #       IgnorePublicAcls: true
  #       RestrictPublicBuckets: true
  #     BucketEncryption:
  #       ServerSideEncryptionConfiguration:
  #         - ServerSideEncryptionByDefault:
  #             SSEAlgorithm: AES256
  #     LifecycleConfiguration:
  #       Rules:
  #         - Id: "ExpireObjects"
  #           AbortIncompleteMultipartUpload:
  #             DaysAfterInitiation: 1
  #           ExpirationInDays: 30 # TODO: I often set this using a variable
  #           Prefix: "cache"
  #           NoncurrentVersionExpirationInDays: 30 # I often set this by a variable
  #           Status: "Disabled" # TODO: Enable only if you are going to use this LifecycleConfiguration


  # Log Group with a retention policy
  AppLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
        LogGroupName: !Sub "/aws/lambda/${AppFunction}"
        RetentionInDays: !If [ IsProduction, 90,  30] # TODO: I often set this using a variable

# Outputs
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
Outputs:
  UserAPI:
    Description: "API Gateway URL"
    Value: !Join
      - ""
      - - !Sub "https://${WebApi}.execute-api.${AWS::Region}.amazonaws.com/"
        - !If [ IsCodeStar, "Prod", !Ref ApiPathBase ] # CodeStar uses *.amazonaws.com/Prod but for ProjectStack you can use whatever you want by setting ApiPathBase
        - "/"